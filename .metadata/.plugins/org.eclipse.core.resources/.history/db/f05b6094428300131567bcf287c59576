#include <inttypes.h>
#include <stdlib.h>
#include <string.h>
#include <util/delay.h>
#include "tinymenu.h"
#include "lcd.h"

#include <cunit>
//#include "spin_delay.h"
//#include "lcd_pcd8544.h"
//#include "lcd_pcd8544_text.h"

//#include "joystick.h"

#define JOYSTICK_UP 1
#define JOYSTICK_DOWN 2
#define JOYSTICK_LEFT 3
#define JOYSTICK_RIGHT 4
#define JOYSTICK_ENTER 5

void my_select(void *arg, char *name);
/*!instantiate linked list here
 * Main
 *  + Freq
 *    |-Hz 			- adjust
 *    |-f  			- adjust
 *  +Amplitude
 *    |-Offset		-adjust
 *    |-Vmax		-adjust
 *    |-Vmin		-adjust
 *    |-Vpp			-adjust
 *    |-Vrms		-adjust
 *  +Shape
 *    |-Sine		-adjust
 *    |-Ramp		-adjust
 *    |-Square		-adjust
 *  +Sync
 *    |-Duty_cyc	-adjust
 *    |-Phase		-adjust
 */
//begin freq submenus
menu_t freq_sub1 =
{  //new info
		.top_entry = 0, .current_entry = 0, .entry =
		{
		{ .flags = 0, .select = adjust_value(&main_menu), .name = "Freq (Hz)", .value = 0, },
		{ .flags = 0, .select = adjust_value(&main_menu), .name = "Freq (S)", .value = 0, }, },
				.num_entries = 3, .previous = NULL, };

menu_t amp_sub1_menu =
{  //new info
		.top_entry = 0, .current_entry = 0, .entry =
		{
		{ .flags = 0, .select = my_select, .name = "Offset", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "Vmax", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "Vmin", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "Vpp", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "Vrms", .value = 0, }, }, .num_entries = 3,
				.previous = &freq_sub1, };

menu_t shape_sub1_menu =
{  //new info
		.top_entry = 0, .current_entry = 0, .entry =
		{
		{ .flags = 0, .select = my_select, .name = "s2", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s3", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s4", .value = 0, }, }, .num_entries = 3,
				.previous = &amp_sub1_menu, };

menu_t sync_sub1_menu =
{  //new info
		.top_entry = 0, .current_entry = 0, .entry =
		{
		{ .flags = 0, .select = my_select, .name = "s2", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s3", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s4", .value = 0, }, }, .num_entries = 3,
				.previous = &shape_sub1_menu, };

menu_t status_sub1_menu =
{  //new info
		.top_entry = 0, .current_entry = 0, .entry =
		{
		{ .flags = 0, .select = my_select, .name = "s2", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s3", .value = 0, },
		{ .flags = 0, .select = my_select, .name = "s4", .value = 0, }, }, .num_entries = 3,
				.previous = &shape_sub1_menu, };

menu_t main_menu =
{ .top_entry = 0, .current_entry = 0, .entry =
{
{ .flags =
MENU_FLAG_SUBMENU, .select = NULL, .name = "Status", .value = &status_sub1_menu, },
{ .flags =
MENU_FLAG_SUBMENU, .select =
NULL, .name = "Frequency", .value = &freq_sub1_menu, },
{ .flags =
MENU_FLAG_SUBMENU, .select = NULL,  //function to be called onSelectAction
		.name = "Amplitude",	//name to be displayed on LCD
		.value = &amp_sub1_menu,	//address used to maintain context
		},
		{ .flags = MENU_FLAG_SUBMENU, .select = NULL, .name = "Wave Shape", .value =
				&shape_sub1_menu, },
		{ .flags = MENU_FLAG_SUBMENU, .select = NULL, .name = "Sync", .value = &sync_sub1_menu, },
		{ .flags = 0,	//0 just means do not switch context. instead, call fxn.
				.select = my_select, .name = "something", .value = 0, } }, .num_entries = 5,  //required for accurate height display
		.previous = NULL, };

menu_context_t menu_context =
{ .x_loc = 0, .y_loc = 0, .height = 4, .width = 18, .menu = NULL, };

void my_select(void *arg, char *name) {
//	lcd_clear();
	lcd_clrscr();
	lcd_puts("Selected: ");
	lcd_puts(name);
//	ms_spin(750);
	_delay_ms(750);
}

void adjust_value(menu_context_t *context) {
	/*!
	 * Reference by address to increase or decrease a
	 *value. additional mod needed for ramping speed
	 * context for this fxn is "adjust selected value"
	 *
	 * User instructions: press left/right to change the
	 * adjusted digit. up/down to adjust the digit.
	 * press enter to finalize the value and return
	 * to menu.
	 *
	 */
	int j = 0, i = 0, deacde = 1;  ///j is joystick input, i is iteration count for
	while (1) {
		_delay_ms(100);				//prevent runaway reading
		j = 1;				//joystick_read();
		if (j == 0)
			t = 0;
		else {
			t++;	//for accelerating inc/dec action
			switch (j) {
			case JOYSTICK_DOWN:
				context->menu->entry->value -= (i * decade);
				break;
			case JOYSTICK_UP:
				context->menu->entry->value += i;
				break;
			case JOYSTICK_RIGHT:
				//code to move active digit right
				break;
			case JOYSTICK_LEFT:
				//code to move joystick left
				break;
			case JOYSTICK_ENTER:
				return;
			}
			menu_display(context);	//needs pointer type fix :(
		}
	}
}
int main() {
	uint8_t j;
//	joystick_init();
	menu_enter(&menu_context, &main_menu);
	while (1) {
		_delay_ms(50);	//		ms_spin(50);
		j = 1;	//joystick_read();
		switch (j) {
		case JOYSTICK_UP:
			menu_next_entry(&menu_context);
			break;
		case JOYSTICK_DOWN:
			menu_prev_entry(&menu_context);
			break;
		case JOYSTICK_LEFT:
			menu_exit(&menu_context);
			break;
		case JOYSTICK_RIGHT:
			break;
		case JOYSTICK_ENTER:
			menu_select(&menu_context);
			break;
		}
	}
}
